{"version":3,"sources":["event-listener.js"],"names":["EventListener","obj","Register","on","name","method","hasOwnProperty","push","fire","console","log","handlerList","i","length","handler","args","j","arguments","apply","off","splice","destroy","module","exports"],"mappings":";;;;;;AAAA;;;AAGA,IAAMA,gBAAgB,SAAhBA,aAAgB,CAAUC,GAAV,EAAe;AACjC,QAAIC,WAAW,EAAf;AACAD,QAAIE,EAAJ,GAAU,UAAUC,IAAV,EAAgBC,MAAhB,EAAwB;AAC9B,YAAI,CAACH,SAASI,cAAT,CAAwBF,IAAxB,CAAL,EAAmC;AAC/BF,qBAASE,IAAT,IAAiB,EAAjB;AACH;AACDF,iBAASE,IAAT,EAAeG,IAAf,CAAoBF,MAApB;AACH,KALD;AAMAJ,QAAIO,IAAJ,GAAW,UAAUJ,IAAV,EAAgB;AACvBK,gBAAQC,GAAR,CAAY,UAAUN,IAAtB;AACA,YAAIF,SAASI,cAAT,CAAwBF,IAAxB,CAAJ,EAAkC;AAC9BK,oBAAQC,GAAR,CAAY,aAAaN,IAAzB;AACA,gBAAIO,cAAcT,SAASE,IAAT,CAAlB;AACA,iBAAK,IAAIQ,IAAI,CAAb,EAAiBA,IAAID,YAAYE,MAAjC,EAA0CD,GAA1C,EAA+C;AAC3C,oBAAIE,UAAUH,YAAYC,CAAZ,CAAd;AACA,oBAAIG,OAAO,EAAX;AACA;AACA,qBAAK,IAAIC,IAAI,CAAb,EAAiBA,IAAIC,UAAUJ,MAA/B,EAAwCG,GAAxC,EAA6C;AACzCD,yBAAKR,IAAL,CAAUU,UAAUD,CAAV,CAAV;AACH;AACD;AACA;AACA;AACA;AACAF,wBAAQI,KAAR,CAAc,IAAd,EAAoBH,IAApB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACH;AACJ;AACJ,KA1BD;AA2BAd,QAAIkB,GAAJ,GAAU,UAAUf,IAAV,EAAgBC,MAAhB,EAAwB;AAC9BI,gBAAQC,GAAR,CAAY,wBAAwBN,IAApC;AACA,YAAIF,SAASI,cAAT,CAAwBF,IAAxB,CAAJ,EAAkC;AAC9B,gBAAIO,cAAcT,SAASE,IAAT,CAAlB;AACA,iBAAK,IAAIQ,IAAI,CAAb,EAAiBA,IAAID,YAAYE,MAAjC,EAA0CD,GAA1C,EAA+C;AAC3C,oBAAID,YAAYC,CAAZ,MAAmBP,MAAvB,EAA8B;AAC1BM,gCAAYS,MAAZ,CAAmBR,CAAnB,EAAuB,CAAvB;AACH;AACJ;AACJ;AACJ,KAVD;AAWAX,QAAIoB,OAAJ,GAAc,YAAY;AACtBnB,mBAAW,EAAX;AACH,KAFD;AAGA,WAAOD,GAAP;AACH,CAlDD;AAmDA;AACAqB,OAAOC,OAAP,GAAiBvB,aAAjB","file":"event-listener.js","sourceRoot":"../../../../assets/Script","sourcesContent":["/**\n * Created by chu on 2017/8/16 0016.\n */\nconst EventListener = function (obj) {\n    let Register = {};\n    obj.on =  function (name, method) {\n        if (!Register.hasOwnProperty(name)){\n            Register[name] = [];\n        }\n        Register[name].push(method);\n    };\n    obj.fire = function (name) {\n        console.log(\"fire \" + name);\n        if (Register.hasOwnProperty(name)){\n            console.log(\"has own \" + name);\n            var handlerList = Register[name];\n            for (let i = 0 ; i < handlerList.length ; i ++){\n                let handler = handlerList[i];\n                let args = [];\n                //js中可以不显示的传参，利用arguments可以模拟重栽（js中没有重栽）\n                for (let j = 1 ; j < arguments.length ; j ++){\n                    args.push(arguments[j]);\n                }\n                //js中apply:方法能劫持另外一个对象的方法，继承另外一个对象的属性.\n                //Function.apply(obj,args)方法能接收两个参数\n                //obj：这个对象将代替Function类里this对象\n                //args：这个是数组，它将作为参数传给Function（args-->arguments）\n                handler.apply(this, args);\n                //call:和apply的意思一样,只不过是参数列表不一样.\n                //Function.call(obj,[param1[,param2[,…[,paramN]]]])\n                //obj：这个对象将代替Function类里this对象\n                //params：这个是一个参数列表\n\n                //根据实际情况根据传参形式不同合理利用apply和call方法\n                // console.log(\"args = \" + JSON.stringify(args));\n            }\n        }\n    };\n    obj.off = function (name, method) {\n        console.log(\"off handler name = \" + name);\n        if (Register.hasOwnProperty(name)){\n            var handlerList = Register[name];\n            for (var i = 0 ; i < handlerList.length ; i ++){\n                if (handlerList[i] === method){\n                    handlerList.splice(i , 1);\n                }\n            }\n        }\n    };\n    obj.destroy = function () {\n        Register = {};\n    };\n    return obj;\n};\n// export default EventListener;\nmodule.exports = EventListener;"]}